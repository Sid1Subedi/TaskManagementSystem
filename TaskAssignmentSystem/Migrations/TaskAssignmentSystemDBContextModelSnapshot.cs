// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAssignmentSystem.TaskAssignmentDbContext;

#nullable disable

namespace TaskAssignmentSystem.Migrations
{
    [DbContext(typeof(TaskAssignmentSystemDBContext))]
    partial class TaskAssignmentSystemDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskAssignmentSystem.Models.Employees.EmployeeModel", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TaskAssignmentSystem.Models.TaskAssignment.TaskAssignmentModel", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskAssignedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TaskId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TaskAssignments");
                });

            modelBuilder.Entity("TaskAssignmentSystem.Models.Tasks.TaskModel", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskAssignmentSystem.Models.TaskAssignment.TaskAssignmentModel", b =>
                {
                    b.HasOne("TaskAssignmentSystem.Models.Employees.EmployeeModel", "Employee")
                        .WithMany("TaskAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskAssignmentSystem.Models.Tasks.TaskModel", "Task")
                        .WithMany("TaskAssignments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskAssignmentSystem.Models.Employees.EmployeeModel", b =>
                {
                    b.Navigation("TaskAssignments");
                });

            modelBuilder.Entity("TaskAssignmentSystem.Models.Tasks.TaskModel", b =>
                {
                    b.Navigation("TaskAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
